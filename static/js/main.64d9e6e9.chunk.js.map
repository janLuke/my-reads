{"version":3,"sources":["assets/app-logo.svg","BooksAPI.js","constants.js","utils.js","components/Menu/Menu.js","components/buttons/buttons.js","components/Book/Book.js","components/Book/index.js","components/BookGrid/BookGrid.js","components/BookGrid/index.js","components/PageInfo/PageInfo.js","components/PageInfo/index.js","components/Header/Header.js","components/utils.js","components/Scaffold/Scaffold.js","components/Scaffold/index.js","pages/SearchPage/SearchPage.js","pages/SearchPage/index.js","components/Bookshelf/Bookshelf.js","components/Bookshelf/index.js","components/Nav/Nav.js","components/Nav/index.js","pages/LibraryPage/LibraryPage.js","pages/LibraryPage/index.js","App/App.js","index.js"],"names":["module","exports","api","token","localStorage","Math","random","toString","substr","headers","search","query","fetch","method","body","JSON","stringify","then","res","json","data","books","ShelfID","Object","freeze","READ","READING","WANT_TO_READ","NONE","ShelfData","id","displayName","icon","color","shortDisplayName","className","this","slug","toLowerCase","split","join","Shelves","faBookOpen","faBookmark","faBook","inDisplayOrder","ids","values","byID","fromEntries","map","shelf","searchTerms","keysOf","keys","valuesOf","entriesOf","entries","groupByID","iterable","idKey","elem","copyWithout","key","obj","copy","assign","clipText","text","maxLength","length","MenuItem","leading","title","onClick","MenuTitle","children","e","stopPropagation","Divider","cn","Menu","MenuTrigger","renderMenu","closeOnMenuClick","popupClassName","React","useState","isVisible","setVisibility","ref","useRef","closeMenu","callback","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","useClickOutside","onMenuClick","defaultProps","Button","raised","style","props","IconButton","size","width","height","fixedWidth","BackButton","faArrowLeft","ShelfIcon","BookActionMenu","book","updateBookShelf","useContext","LibraryContext","shelfItems","filter","faTrashAlt","BookActionMenuTrigger","faCaretDown","Book","shelfID","showShelfRibbon","bookCover","imageLinks","src","thumbnail","alt","clippedTitle","authors","clippedAuthors","renderRibbon","PureComponent","flippedGridItemCallbacks","onAppear","el","classList","add","setTimeout","opacity","remove","onExit","index","removeElement","hideExitThenFlipEnter","a","hideEnteringElements","animateEnteringElements","animateExitingElements","animateFlippedElements","Promise","all","BookGrid","flipKey","handleEnterUpdateDelete","flipId","PageInfo","type","illustration","Header","position","HeaderLayout","Logo","logo","PageLoader","loading","ThemeSwitcher","ThemeContext","theme","setTheme","otherTheme","faSun","faMoon","Scaffold","header","renderBody","floatingActionButton","error","args","console","log","name","message","startsWith","primarycolor","renderError","SearchHelp","onTermChipClick","term","SearchField","value","placeholder","autoFocus","onChange","onClear","hasFocus","setFocus","inputRef","onFocus","faSearch","onBlur","onMouseDown","preventDefault","focus","normalizeQuery","rawQuery","trim","SearchPage","state","inputQuery","resultsQuery","results","onInputQueryChange","setState","fetchResultsDebounced","fetchResults","BooksAPI","receiveResults","catch","includes","debounce","DEBOUNCE_TIME","setQuery","onClearInput","userBooks","booksByID","resultsWithShelf","to","renderResults","Component","compareBooks","b","publishedDate","Bookshelf","sortedBooks","sort","renderBooksGrid","Nav","Item","scrollToElement","offsetTop","window","scrollTo","top","behavior","LibraryPageHeader","scroll","LibraryPageBody","memo","booksByShelfID","byShelf","push","groupBooksByShelf","LibraryPage","createContext","App","themeContext","fetchBooks","revertLocalUpdate","updateBookShelfLocally","bookID","serverShelves","toast","handleEventualStateInconsistency","currentShelf","updatedBook","from","localBooksByID","numBooksServerSide","shelfBooks","reduce","numBooksClientSide","bookIDs","areConsistent","info","autoClose","libraryContext","Provider","exact","path","Error404","accentcolor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.64d9e6e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app-logo.bfc5d976.svg\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const updateBookShelf = (bookID, shelf) =>\n  fetch(`${api}/books/${bookID}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import { faBook, faBookmark, faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\n\n/**\n * ID for shelves accepted by the backend API. It includes NONE, the value for\n * removing a book from the user's book library.\n */\nexport const ShelfID = Object.freeze({\n  READ: \"read\",\n  READING: \"currentlyReading\",\n  WANT_TO_READ: \"wantToRead\",\n  NONE: \"none\"\n});\n\nexport class ShelfData {\n  constructor({ id, displayName, icon, color, shortDisplayName, className }) {\n    this.id = id;\n    this.displayName = displayName;\n    this.shortDisplayName = shortDisplayName || displayName;\n    this.icon = icon;\n    this.color = color;\n    // This is used for anchors and CSS class names:\n    this.slug = className || this.displayName.toLowerCase().split(' ').join('-');\n  }\n}\n\nexport const Shelves = Object.freeze((() => {  // IIFE\n  let READING = Object.freeze(new ShelfData({\n    id: ShelfID.READING,\n    displayName: \"Currently reading\",\n    shortDisplayName: \"Reading\",\n    icon: faBookOpen,\n    color: 'var(--color-shelf-reading)'\n  }));\n\n  let WANT_TO_READ = Object.freeze(new ShelfData({\n    id: ShelfID.WANT_TO_READ,\n    displayName: \"Want to read\", shortDisplayName: \"Wanted\",\n    icon: faBookmark, color: 'var(--color-shelf-want-to-read)'\n  }));\n\n  let READ = Object.freeze(new ShelfData({\n    id: ShelfID.READ, displayName: \"Read\",\n    icon: faBook, color: 'var(--color-shelf-read)'\n  }));\n\n  let inDisplayOrder = Object.freeze([READING, WANT_TO_READ, READ]);\n  let ids = Object.values(ShelfID);\n\n  let byID = Object.freeze(\n    Object.fromEntries(\n      inDisplayOrder.map(shelf => [shelf.id, shelf]))\n  );\n\n  return { READING, WANT_TO_READ, READ, ids, inDisplayOrder, byID }\n})());\n\n\n/**\n * List of search terms accepted by the API.\n */\nexport const searchTerms = Object.freeze([\n  'Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball',\n  'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics',\n  'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing',\n  'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First',\n  'Fitness', 'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey',\n  'Kafka', 'King', 'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez',\n  'Money', 'Mystery', 'Negotiate', 'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production',\n  'Programming', 'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction',\n  'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate',\n  'Virtual Reality', 'Web Development', 'iOS'\n]);","import React from \"react\";\n\nexport const keysOf = Object.keys;\nexport const valuesOf = Object.values;\nexport const entriesOf = Object.entries;\n\nexport function groupByID(iterable, idKey = 'id') {\n  let byID = {};\n  for (let elem of iterable)\n    byID[elem[idKey]] = elem;\n  return byID;\n}\n\nexport function copyWithout(key, obj) {\n  let copy = Object.assign({}, obj);\n  delete copy[key];\n  return copy;\n}\n\nexport function clipText(text, maxLength) {\n  if (text.length <= maxLength)\n    return text;\n  return text.substr(0, maxLength - 3) + '...';\n}\n\n/**\n * Calls the provided [callback] when the user click outside the element identified by [ref]\n */\nexport function useClickOutside(ref, callback) {\n  React.useEffect(() => {\n\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target))\n        callback()\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, callback]);\n}","import React from 'react';\nimport cn from 'classnames';\nimport './Menu.scss';\nimport { useClickOutside } from \"utils.js\";\n\n\nexport function MenuItem({ leading, title, onClick }) {\n  return (\n    <div className=\"MenuItem\" onClick={onClick}>\n      <div className=\"MenuItem-leading\">\n        {leading}\n      </div>\n      <div className=\"MenuItem-title\">\n        {title}\n      </div>\n    </div>\n  );\n};\n\nexport function MenuTitle({ children }) {\n  return <h3 className=\"MenuTitle\" onClick={(e) => e.stopPropagation()}>\n    {children}\n  </h3>;\n};\n\nexport function Divider({ className }) {\n  return <div className={cn(\"Divider\", className)} />\n}\n\nexport function Menu({ children, className }) {\n  return (\n    <div className={cn(\"Menu\", className)} >\n      {children}\n    </div>\n  );\n}\n\nexport function MenuTrigger({\n  renderMenu, children, closeOnMenuClick,\n  className, popupClassName\n}) {\n  let [isVisible, setVisibility] = React.useState(false);\n  let ref = React.useRef(null);\n\n  const toggleMenu = () => setVisibility(!isVisible);\n  const closeMenu = () => setVisibility(false);\n  useClickOutside(ref, closeMenu);\n  const onMenuClick = (closeOnMenuClick) ? closeMenu : null;\n\n  return (\n    <div ref={ref} className={cn(\"MenuTrigger\", className)}>\n      <div onClick={toggleMenu}>\n        {children}\n      </div>\n      {isVisible && (\n        <div className={cn(\"MenuTrigger-popup\", popupClassName)} onClick={onMenuClick}>\n          {renderMenu()}\n        </div>\n      )}\n    </div>\n  );\n}\n\nMenuTrigger.defaultProps = {\n  closeOnMenuClick: true\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './buttons.scss';\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n\nexport function Button({ color, raised, className, style, children, onClick, ...props }) {\n  return (\n    <button\n      {...props}\n      className={cn(\"Button\", color, className, { 'raised': raised })}\n      style={style}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  'raised': false\n};\n\nexport function IconButton({ icon, raised, size, color, className, onClick, ...props }) {\n  return (\n    <Button\n      color={color}\n      raised={raised}\n      className={cn(\"IconButton\", className)}\n      style={{ width: size, height: size }}\n      onClick={onClick}\n      {...props}\n    >\n      <FontAwesomeIcon icon={icon} fixedWidth />\n    </Button>\n  );\n}\n\nexport function BackButton({ props }) {\n  return (\n    <IconButton icon={faArrowLeft} {...props} />\n  );\n}","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { ShelfID, Shelves } from 'constants.js';\nimport { LibraryContext } from \"App\";\nimport { Divider, Menu, MenuItem, MenuTitle, MenuTrigger } from \"components/Menu\";\nimport './Book.scss';\nimport { IconButton } from \"components/buttons\";\nimport { clipText } from \"../../utils\";\n\nfunction ShelfIcon({ shelf }) {\n  let { icon, color } = shelf;\n  return <FontAwesomeIcon icon={icon} color={color} fixedWidth />\n}\n\n/**\n * IMPORTANT: ensure [book.shelf] is defined if the book belongs to a shelf.\n */\nfunction BookActionMenu({ book }) {\n  const { updateBookShelf } = useContext(LibraryContext);\n\n  // One add/move action for each shelf different from the one the book is currently in (if any)\n  let shelfItems = Shelves.inDisplayOrder\n    .filter(shelf => shelf.id !== book.shelf)\n    .map(shelf => (\n      <MenuItem\n        key={shelf.id}\n        leading={<ShelfIcon shelf={shelf} />}\n        title={shelf.displayName}\n        onClick={() => updateBookShelf(book, shelf.id)}\n      />\n    ));\n\n  return (\n    <Menu>\n      <MenuTitle>{(book.shelf) ? \"Move to\" : \"Add to\"}</MenuTitle>\n      {shelfItems}\n      {book.shelf && (\n        <>\n          <Divider />\n          <MenuItem\n            key=\"remove\"\n            leading={<FontAwesomeIcon icon={faTrashAlt} color={\"red\"} fixedWidth />}\n            title=\"Remove\"\n            onClick={() => updateBookShelf(book, ShelfID.NONE)}\n          />\n        </>\n      )}\n    </Menu>\n  );\n}\n\nfunction BookActionMenuTrigger({ book }) {\n  const renderMenu = () => <BookActionMenu book={book} />\n  return (\n    <MenuTrigger className=\"BookActionMenuTrigger\" renderMenu={renderMenu}>\n      <IconButton raised color=\"secondary\" icon={faCaretDown} />\n    </MenuTrigger>\n  );\n}\n\n/**\n * Display the book's cover, title and author. It provides an action menu\n * to add/move the book to one of the shelves or remove it from the library.\n *\n * IMPORTANT: ensure [book.shelf] is defined if the book belongs to a shelf,\n * otherwise the book won't have a ribbon and, most importantly, the action menu\n * won't show the correct available actions.\n */\nclass Book extends React.PureComponent {\n\n  static propTypes = {\n    /** Note: ensure [book.shelf] is defined if the book belongs to a shelf  */\n    book: PropTypes.object.isRequired,\n    showShelfRibbon: PropTypes.bool\n  }\n\n  static defaultProps = {\n    showShelfRibbon: false\n  }\n\n  renderRibbon(shelfID) {\n    let shelf = Shelves.byID[shelfID];\n    return (\n      <div className={cn(\"Book-ribbon\", shelf.slug)}>\n        <span>{shelf.shortDisplayName}</span>\n      </div>\n    );\n  }\n\n  render() {\n    let { book, showShelfRibbon } = this.props;\n\n    let bookCover = (book.imageLinks)\n      ? <img src={book.imageLinks.thumbnail} alt={`Cover of \"${book.title}\"`} />\n      : <div className=\"Book-cover-placeholder\">Cover not available</div>;\n\n    const maxTitleLen = 75;\n    const maxAuthorsLen = 50;\n    let clippedTitle = clipText(book.title, maxTitleLen);\n    let authors = ('authors' in book) ? book.authors.join(', ') : null;\n    let clippedAuthors = (authors) ? clipText(authors, maxAuthorsLen) : null;\n\n    return (\n      <div className=\"Book\">\n        <div className=\"Book-top\">\n          <div className=\"Book-cover\">\n            {bookCover}\n            {(book.shelf && showShelfRibbon) && this.renderRibbon(book.shelf)}\n          </div>\n          <BookActionMenuTrigger book={book} />\n        </div>\n\n        <div className=\"Book-title\" title={(book.title.length > maxTitleLen) ? book.title : null}>\n          {clippedTitle}\n        </div>\n\n        {(authors) && (\n          <div className=\"Book-authors\" title={(authors.length > maxAuthorsLen) ? authors : null}>\n            {clippedAuthors}\n          </div>\n        )}\n\n        {/*{('publishedDate' in book) && (*/}\n        {/*  <div className=\"Book-year\">*/}\n        {/*    ({getYear(book.publishedDate)})*/}\n        {/*  </div>*/}\n        {/*)}*/}\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import Book from './Book';\nexport default Book;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flipped, Flipper } from 'react-flip-toolkit'\nimport Book from \"../Book\";\nimport './BookGrid.scss';\n\n\nconst flippedGridItemCallbacks = {\n  onAppear: (el) => {\n    const className = 'book-appear';\n    el.classList.add(className);\n    setTimeout(() => {\n      el.style.opacity = 1;\n      el.classList.remove(className);\n    }, 300);\n  },\n\n  onExit: (el, index, removeElement) => {\n    el.classList.add('book-exit');\n    setTimeout(removeElement, 300);\n  }\n}\n\n/**\n * In <Flipper />, wait an element to be removed before starting the flip animation.\n */\nconst hideExitThenFlipEnter = async ({\n  hideEnteringElements,\n  animateEnteringElements,\n  animateExitingElements,\n  animateFlippedElements\n}) => {\n  await Promise.all([hideEnteringElements(), animateExitingElements()]);\n  animateFlippedElements();\n  animateEnteringElements();\n};\n\nfunction BookGrid({ books, showShelfRibbon }) {\n  return (\n    <Flipper flipKey={books} handleEnterUpdateDelete={hideExitThenFlipEnter}>\n      <ol className=\"BookGrid\">\n        {books.map(book => (\n          <Flipped key={book.id} flipId={book.id} {...flippedGridItemCallbacks}>\n            <li className=\"BookGrid-item\">\n              <Book book={book} showShelfRibbon={showShelfRibbon} />\n            </li>\n          </Flipped>\n        ))}\n      </ol>\n    </Flipper>\n  );\n}\n\nBookGrid.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.object),\n  showShelfRibbon: PropTypes.bool,\n};\n\nBookGrid.defaultProps = {\n  showShelfRibbon: false\n}\n\nexport default BookGrid;\n","import BookGrid from './BookGrid';\nexport default BookGrid;","import React from 'react';\nimport cn from 'classnames';\nimport './PageInfo.scss';\n\nfunction PageInfo({ type, illustration, title, text }) {\n  return (\n    <div className={cn(\"PageInfo\", type)}>\n      {illustration && <div className=\"PageInfo-illustration\">{illustration}</div>}\n      <div className=\"PageInfo-content\">\n        {title && <h2 className=\"PageInfo-title\">{title}</h2>}\n        {text && <p className=\"PageInfo-text\">{text}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default PageInfo;\n","import PageInfo from './PageInfo';\nexport default PageInfo;","import React from 'react';\nimport cn from 'classnames';\nimport logo from 'assets/app-logo.svg';\nimport './Header.scss';\n\nexport function Header({ position, className, children }) {\n  return (\n    <header className={cn('Header', position, className)}>\n      {children}\n    </header>\n  );\n}\n\nHeader.defaultProps = {\n  position: 'fixed'\n};\n\nexport function HeaderLayout({ className, children }) {\n  return (\n    <div className={cn('HeaderLayout', className)}>\n      {children}\n    </div>\n  )\n}\n\nHeader.Logo = () => (\n  <img src={logo} className=\"Header-logo\" alt=\"MyReads logo\" />\n);\n\n","/**\n * Components that require little code and little or no styles.\n */\nimport React, { useContext } from \"react\";\nimport './utils.scss'\nimport ReactLoading from \"react-loading\";\nimport { ThemeContext } from \"../App\";\nimport { IconButton } from \"./buttons\";\nimport { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\n\nexport function PageLoader({ loading, children }) {\n  return (loading) ? (\n    <div className='PageLoader'>\n      <ReactLoading type=\"bars\" color=\"var(--color-primary)\" />\n    </div>\n  ) : (\n    <>\n      {(typeof children === 'function')\n        ? children()\n        : children}\n    </>\n  );\n}\n\nexport function ThemeSwitcher() {\n  let { theme, setTheme } = useContext(ThemeContext);\n  let otherTheme = (theme === 'light') ? 'dark' : 'light';\n  return (\n    <IconButton\n      title=\"Toggle light/dark theme\"\n      icon={(theme !== \"light\") ? faSun : faMoon}\n      onClick={() => setTheme(otherTheme)}\n    />\n  )\n}","import React from 'react';\nimport './Scaffold.scss';\nimport { PageLoader } from \"../utils\";\nimport PageInfo from \"components/PageInfo\";\nimport { SvgServerDown, SvgWarning } from \"iblis-react-undraw\";\n\n/**\n * Simplistic error handling/presentation\n */\nfunction renderError(error) {\n  console.log(error.name, error.message);\n  let args;\n  if (error.name === 'TypeError' && error.message.startsWith('NetworkError')) {\n    args = {\n      illustration: <SvgServerDown primarycolor=\"var(--color-error)\" />,\n      title: \"Network Error\",\n      text: \"Error when attempting to fetch data from the server\"\n    }\n  }\n  else {\n    args = {\n      illustration: <SvgWarning primarycolor=\"var(--color-error)\" />,\n      title: \"Ops! Something went wrong!\",\n      text: \"Error when attempting to fetch data from the server\"\n    }\n  }\n\n  return <PageInfo type=\"error\" {...args} />;\n}\n\n/**\n * This is a template component for pages of the application. It handles\n * common layout issues and common logic of pages. For example:\n * - it adapts the padding-top of the main content in function of the height of\n *   the Header (which is different depending on the viewport width);\n * - it shows a loading indicator (in the body) when [loading] is true;\n * - it shows page errors (in the body) when [error] is not null (and [loading] is false).\n *\n * @param header Should be an instance of Header\n * @param renderBody Function that renders the body of the page\n * @param floatingActionButton\n */\nfunction Scaffold({ header, renderBody, floatingActionButton, loading, error }) {\n  return (\n    <div className=\"Scaffold\">\n      {header}\n\n      <main className=\"Scaffold-body\">\n        <PageLoader loading={loading}>\n          {(error)\n            ? () => renderError(error)\n            : renderBody}\n        </PageLoader>\n      </main>\n\n      {floatingActionButton && (\n        <div className=\"Scaffold-fab\">\n          {floatingActionButton}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Scaffold;\n","import Scaffold from \"./Scaffold\";\nexport default Scaffold;","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { debounce } from 'debounce';\n\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { SvgNotFound, SvgSearch } from 'iblis-react-undraw';\n\nimport * as BooksAPI from 'BooksAPI';\nimport { searchTerms } from \"constants.js\";\nimport BookGrid from \"components/BookGrid\";\nimport PageInfo from \"components/PageInfo\";\nimport { Header, HeaderLayout } from 'components/Header';\nimport { BackButton } from \"components/buttons\";\nimport { ThemeSwitcher } from \"components/utils\";\nimport './SearchPage.scss';\nimport Scaffold from \"../../components/Scaffold\";\n\n\nfunction SearchHelp({ onTermChipClick }) {\n  return (\n    <div className=\"Search-content\">\n      <div className=\"SearchHelp\">\n        <div className=\"SearchHelp-illustration\">\n          <SvgSearch primarycolor=\"var(--color-primary)\" />\n        </div>\n        <p className=\"SearchHelp-text\">\n          <strong>Note:</strong> the backend API uses a fixed set of cached search results\n          and is limited to the following search terms (including prefixes of them).\n          Any other query will return no results.\n        </p>\n        <ul className=\"SearchHelp-term-list\">\n          {searchTerms.map(term => (\n            <li key={term}>\n            <span className=\"search-term-chip\" onClick={() => onTermChipClick(term)}>\n              {term}\n            </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n/**\n * A controlled input component that wraps a text input and a button for clearing it.\n * Being controlled, note that you need to explicitly clear the input [value] when the\n * button is pressed (or nothing will happen).\n */\nfunction SearchField({ value, placeholder, autoFocus, onChange, onClear }) {\n  let [hasFocus, setFocus] = useState(autoFocus);\n  let inputRef = useRef(null);\n\n  const onClearWrapper = (e) => {\n    setFocus(true);\n    inputRef.current.focus();\n    if (onClear) onClear();\n  }\n\n  return (\n    <div className={cn('SearchField', { onFocus: hasFocus })}>\n      <div className=\"SearchField-icon\">\n        <FontAwesomeIcon icon={faSearch} />\n      </div>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        autoFocus={autoFocus}\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        onFocus={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      />\n      <button\n        className={cn('SearchField-clear', { 'hidden': !value })}\n        onMouseDown={(e) => e.preventDefault()}  // prevent the button to steal the focus to the input\n        onClick={onClearWrapper}\n      >\n        &times;\n      </button>\n    </div>\n  );\n}\n\nSearchField.defaultProps = {\n  autoFocus: false\n}\n\nfunction normalizeQuery(rawQuery) {\n  return rawQuery.trim();\n}\n\nclass SearchPage extends React.Component {\n  static DEBOUNCE_TIME = 500;  // in milliseconds\n\n  static propTypes = {\n    booksByID: PropTypes.object.isRequired\n  }\n\n  state = {\n    loading: false,\n    /** Value of the SearchField */\n    inputQuery: '',\n    /** Query that current results are relative to */\n    resultsQuery: '',\n    results: [],\n    error: null\n  }\n\n  onInputQueryChange = (value) => {\n    this.setState({ inputQuery: value });\n    this.fetchResultsDebounced(value);\n  }\n\n  fetchResults = (rawQuery) => {\n    let query = normalizeQuery(rawQuery);\n    if (query === this.state.resultsQuery) {\n      if (this.state.loading) {\n        // This is necessary in the following scenario:\n        // 1. current [resultsQuery] is \"ciao\" and so is [inputQuery]\n        // 2. the user deletes some chars so that the [inputQuery] is now \"ci\" and stops typing\n        // 3. while waiting for a server response for \"ci\", the user rewrites the deleted chars and stops\n        // 4. when [receiveResults] gets results for \"ci\", it ignores them because the query\n        //    has changed meanwhile and leaves [loading] set to true\n        // 5. [fetchResults] is called with \"ciao\", which is the last [resultsQuery] and so we arrive\n        //    here; if we don't set [loading] to false, the page keeps \"loading\" for no reason\n        this.setState({ loading: false });\n      }\n      return;\n    }\n\n    if (!query) {\n      this.setState({ results: [], resultsQuery: '', loading: false });\n    }\n    else {\n      this.setState({ loading: true });\n      BooksAPI.search(query)\n        .then(results => this.receiveResults(results, query))\n        .catch((error) => this.setState({ loading: false, error: error }));\n    }\n  }\n\n  receiveResults = (results, query) => {\n    if (normalizeQuery(this.state.inputQuery) !== query) {\n      console.log('Ignoring results for outdated query \"%s\"', query);\n    }\n    else if ('error' in results) {\n      if (results.error.includes('empty query')) {\n        // The API weirdly returns an \"empty query\" error when the query is not in the set\n        // of available search terms even if the query is perfectly valid and not empty.\n        // Note that fetchResults() never sends a request with an empty query.\n        this.setState({ results: [], resultsQuery: query, loading: false });\n      }\n      else { // This should never happen\n        console.error(results.error);\n        this.setState({ loading: false, error: results.error });\n      }\n    }\n    else {  // No errors\n      this.setState({ results, resultsQuery: query, loading: false });\n    }\n  }\n\n  fetchResultsDebounced = debounce(this.fetchResults, SearchPage.DEBOUNCE_TIME);\n\n  setQuery = (rawQuery) => {\n    this.setState({ inputQuery: rawQuery });\n    this.fetchResults(rawQuery);\n  }\n\n  renderResults() {\n    let { results, resultsQuery } = this.state;\n    let userBooks = this.props.booksByID;\n\n    let resultsWithShelf = results.map(\n      book => (book.id in userBooks) ? userBooks[book.id] : book)\n\n    if (results.length === 0)\n      return (\n        <PageInfo\n          illustration={<SvgNotFound primarycolor=\"var(--color-primary)\" />}\n          title={'No books found'}\n          text={`Couldn't find any book for \"${resultsQuery}\"`}\n        />\n      );\n    else\n      return (\n        <div className=\"Search-content\">\n          <BookGrid books={resultsWithShelf} showShelfRibbon />\n        </div>\n      );\n  }\n\n  onClearInput = () => {\n    console.log('Clear input');\n    this.onInputQueryChange('');\n  }\n\n  render() {\n    // console.log('Search state', this.state);\n    let { inputQuery, resultsQuery, loading, error } = this.state;\n\n    return (\n      <Scaffold\n        loading={loading || this.props.loading}\n        error={error || this.props.error}\n        header={(\n          <Header position=\"fixed\" className=\"Search-header\">\n            <HeaderLayout>\n              <Link to=\"/\">\n                <BackButton />\n              </Link>\n\n              <SearchField\n                placeholder=\"Search books...\"\n                autoFocus\n                value={inputQuery}\n                onChange={this.onInputQueryChange}\n                onClear={this.onClearInput}\n              />\n\n              <ThemeSwitcher />\n            </HeaderLayout>\n          </Header>\n        )}\n        renderBody={() => (\n          (!resultsQuery)\n            ? <SearchHelp onTermChipClick={this.setQuery} />\n            : this.renderResults()\n        )}\n      />\n    );\n  }\n}\n\nexport default SearchPage;","import SearchPage from './SearchPage';\nexport default SearchPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SvgBookLover } from 'iblis-react-undraw';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport BookGrid from \"../BookGrid\";\nimport './Bookshelf.scss';\n\n\nfunction compareBooks(a, b) {\n  if (a.title < b.title) return -1;\n  if (a.title > b.title) return 1;\n  if (a.publishedDate < b.publishedDate) return -1;\n  if (a.publishedDate > b.publishedDate) return 1;\n  return 0;\n}\n\nfunction renderBooksGrid(books) {\n  let sortedBooks = books.sort(compareBooks);\n  return <BookGrid books={sortedBooks} />;\n}\n\nfunction renderEmptyShelf() {\n  return (\n    <div className=\"Bookshelf-empty\">\n      <div className=\"illustration\">\n        <SvgBookLover primarycolor=\"var(--color-secondary)\"/>\n      </div>\n      <div className=\"content\">\n        <h3 className=\"content-title\">This shelf is empty</h3>\n        <p className=\"content-text\">\n          Click the search icon on the top-right of the page to find and add new books!\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction Bookshelf({ title, books, icon, color, ...props }) {\n  return (\n    <div className=\"Bookshelf\" {...props}>\n      <h2 className=\"Bookshelf-title\">\n        {icon && <FontAwesomeIcon icon={icon} color={color} className=\"Bookshelf-icon\" />}\n        {title}\n      </h2>\n      <div className=\"Bookshelf-content\">\n        {(books.length > 0)\n          ? renderBooksGrid(books)\n          : renderEmptyShelf()}\n      </div>\n    </div>\n  );\n}\n\nBookshelf.propTypes = {\n  icon: PropTypes.object,\n  title: PropTypes.string.isRequired,\n  books: PropTypes.array.isRequired,\n};\n\nexport default Bookshelf;","import Bookshelf from './Bookshelf';\nexport default Bookshelf;","import React from 'react';\nimport './Nav.scss';\nimport cn from \"classnames\";\n\nfunction Nav({ children, className }) {\n  return (\n    <nav>\n      <ol className={cn(\"Nav\", className)}>\n        {children}\n      </ol>\n    </nav>\n  );\n}\n\nNav.Item = ({ children, className, ...props }) => {\n  return (\n    <li className={cn('NavItem', className)} {...props}>\n      {children}\n    </li>\n  );\n}\n\nexport default Nav;","import Nav from './Nav';\nexport default Nav;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { HashLink } from 'react-router-hash-link';\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Shelves } from \"constants.js\";\nimport { valuesOf } from \"utils.js\";\nimport Bookshelf from \"components/Bookshelf\";\nimport Scaffold from \"components/Scaffold\";\nimport Nav from \"components/Nav\";\nimport { Header, HeaderLayout } from 'components/Header';\nimport { IconButton } from \"components/buttons/buttons\";\nimport { ThemeSwitcher } from \"components/utils\";\nimport './LibraryPage.scss';\n\n\nfunction scrollToElement(el, offsetTop=-100) {\n  window.scrollTo({\n    top: el.offsetTop + offsetTop,\n    behavior: 'smooth'\n  })\n}\n\nfunction LibraryPageHeader() {\n  return (\n    <Header>\n      <HeaderLayout>\n\n        <div className=\"Library-logo-wrapper\">\n          <Header.Logo />\n        </div>\n\n        <Nav className=\"Library-nav\">\n          {Shelves.inDisplayOrder.map(shelf => (\n            <Nav.Item key={shelf.id}>\n              <HashLink to={`/#${shelf.slug}`} scroll={scrollToElement}>\n                {shelf.shortDisplayName}\n              </HashLink>\n            </Nav.Item>\n          ))}\n        </Nav>\n\n        <div className=\"Library-action-items\">\n          <Link to=\"/search\">\n            <IconButton icon={faSearch} title=\"Search books\" />\n          </Link>\n          <ThemeSwitcher />\n        </div>\n\n      </HeaderLayout>\n    </Header>\n  );\n}\n\nfunction groupBooksByShelf(books) {\n  let byShelf = Object.fromEntries(\n    Shelves.ids.map(id => [id, []]));\n  for (let book of books)\n    byShelf[book.shelf].push(book);\n  return byShelf;\n}\n\n\nconst LibraryPageBody = React.memo(({ booksByID }) => {\n  let booksByShelfID = groupBooksByShelf(valuesOf(booksByID));\n  return (\n    <div className=\"Library-content\">\n      {Shelves.inDisplayOrder.map(shelf => (\n        <Bookshelf\n          id={shelf.slug}\n          key={shelf.id}\n          icon={shelf.icon}\n          color={shelf.color}\n          title={shelf.displayName}\n          books={booksByShelfID[shelf.id]}\n        />\n      ))}\n    </div>\n  );\n});\n\nconst LibraryPage = React.memo(({ booksByID, loading, error }) => {\n  return (\n    <Scaffold\n      loading={loading}\n      error={error}\n      header={\n        <LibraryPageHeader />\n      }\n      renderBody={\n        () => <LibraryPageBody booksByID={booksByID} />\n      }\n      // The FAB was replaced by an action item in the header\n      // floatingActionButton={(\n      //   <Link to=\"/search\">\n      //     <IconButton raised color=\"primary\" icon={faPlus} />\n      //   </Link>\n      // )}\n    />\n  );\n});\n\nLibraryPage.propTypes = {\n  booksByID: PropTypes.object.isRequired,\n  loading: PropTypes.bool,\n  error: PropTypes.object\n};\n\nLibraryPage.defaultProps = {\n  loading: false,\n  error: null\n};\n\nexport default LibraryPage;","import LibraryPage from './LibraryPage';\nexport default LibraryPage;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SvgPageNotFound } from 'iblis-react-undraw';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport * as BooksAPI from 'BooksAPI';\nimport SearchPage from 'pages/SearchPage';\nimport LibraryPage from 'pages/LibraryPage';\nimport { ShelfID } from \"../constants\";\nimport { copyWithout, entriesOf, groupByID, keysOf, valuesOf } from \"../utils\";\nimport './App.scss';\nimport PageInfo from \"components/PageInfo\";\n\n\nexport const ThemeContext = React.createContext({\n  theme: 'light',\n  setTheme: (theme) => null\n});\n\n\n// I don't see the necessity to include [booksByID] in this context. I'm passing\n// an object as value so that it's more easily expandable\nexport const LibraryContext = React.createContext({\n  updateBookShelf: (book, shelf) => null\n});\n\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      theme: localStorage.theme || 'light',\n      booksByID: {},\n      loading: false,\n      error: null\n    }\n\n    // Note: I'm creating context objects to prevent a new context object from being created every\n    // time render is called causing unintentional re-rendering of consumers.\n    // See: https://it.reactjs.org/docs/context.html#caveats\n\n    this.libraryContext = {\n      updateBookShelf: this.updateBookShelf\n    };\n\n    this.themeContext = {\n      theme: this.state.theme,\n      setTheme: this.setTheme\n    }\n  }\n\n  setTheme = (theme) => {\n    localStorage.theme = theme;\n    this.themeContext = { theme, setTheme: this.setTheme };\n    this.setState({ theme });\n  }\n\n  componentDidMount() {\n    this.fetchBooks();\n  }\n\n  fetchBooks = () => {\n    console.log('Fetching books');\n    this.setState({ loading: true, error: null });\n    return BooksAPI.getAll()\n      .then(books => {\n        this.setState({\n          booksByID: groupByID(books),\n          loading: false, error: null\n        });\n      })\n      .catch(error => {\n        this.setState({ loading: false, error: error })\n      })\n  };\n\n  updateBookShelf = async (book, shelfID) => {\n    console.log('Moving book \"%s\" to shelf %s', book.title, shelfID);\n    // Optimistically update the local (UI) state\n    let revertLocalUpdate = this.updateBookShelfLocally(book, shelfID);\n    try {\n      // The API returns the state of all shelves described as lists of book IDs\n      const serverShelves = await BooksAPI.updateBookShelf(book.id, shelfID);\n      if ('error' in serverShelves) {\n        // It's not documented that the API can return a JSON with an error field (like search());\n        // Just in case...\n        toast.error(`Your last operation was rejected by the server. Details: \"${serverShelves.error}\"`);\n        revertLocalUpdate();\n      }\n      else { // Take the opportunity to ensure that the local state is consistent with the server state.\n        console.log('Book updated server-side!');\n        this.handleEventualStateInconsistency(serverShelves);\n      }\n    }\n    catch (error) {\n      console.error(error);\n      toast.error(`Your last operation did not succeed. Error details: \"${error.message}\"`);\n      revertLocalUpdate();\n    }\n  }\n\n  /**\n   * Used for optimistically updating the local state of the application.\n   */\n  updateBookShelfLocally = (book, shelfID) => {\n    let booksByID = this.state.booksByID;\n\n    // Trust [state], not [book.shelf] (even though they should be consistent)\n    let currentShelf = (book.id in booksByID)\n      ? booksByID[book.id].shelf\n      : ShelfID.NONE;\n\n    this.setState(state => {\n      if (currentShelf === shelfID)   // Nothing to update\n        return null;\n\n      if (shelfID === ShelfID.NONE) {  // Remove the book from the user library\n        return { booksByID: copyWithout(book.id, state.booksByID) };\n      }\n\n      // Either add a new book or move a book to one shelf to another\n      let updatedBook = { ...book, shelf: shelfID };\n      return { booksByID: { ...state.booksByID, [book.id]: updatedBook } };\n    }, () => {\n      console.log('Optimistic update completed:', { book: book.title, from: currentShelf, to: shelfID });\n    });\n\n    // Return a function that can be used to revert the local update (in case of error)\n    return () => this.updateBookShelfLocally(book, currentShelf);\n  }\n\n  /**\n   * Checks if the local state is consistent with the state of shelf server-side.\n   * If not, the books are re-fetched.\n   * @param {Object} serverShelves: contains a list of books IDs for each shelf\n   */\n  handleEventualStateInconsistency = (serverShelves) => {\n    console.log('Checking state consistency...');\n\n    function areConsistent(localBooksByID, serverShelves) {\n      let numBooksServerSide = valuesOf(serverShelves)\n        .map(shelfBooks => shelfBooks.length)\n        .reduce((res, length) => res + length);\n\n      let numBooksClientSide = keysOf(localBooksByID).length;   // a Map would serve me better here\n      if (numBooksClientSide !== numBooksServerSide) {\n        console.log('Inconsistent number of books (local / server): ', numBooksClientSide, numBooksServerSide);\n        return false;\n      }\n\n      for (let [shelf, bookIDs] of entriesOf(serverShelves)) {\n        for (let id of bookIDs) {\n          if (!localBooksByID[id] || localBooksByID[id].shelf !== shelf)\n            return false;\n        }\n      }\n      return true;\n    }\n\n    // Re-fetch all data if local state is inconsistent with server state.\n    if (!areConsistent(this.state.booksByID, serverShelves)) {\n      toast.info(\n        \"This page was refreshed because it was detected to be out of sync with the cloud. \" +\n        \"This happens when you use MyReads from multiple devices or tabs.\",\n        { autoClose: 10000, position: 'bottom-right' });\n      this.fetchBooks();\n    }\n  };\n\n  render() {\n    // console.log('Render App', this.state);\n    let { booksByID, loading, error, theme } = this.state;\n\n    return (\n      <BrowserRouter>\n        <div className={cn(\"theme\", theme)}>\n          <div className=\"App\">\n            <ToastContainer />\n            <LibraryContext.Provider value={this.libraryContext}>\n              <ThemeContext.Provider value={this.themeContext}>\n                <Switch>\n\n                  <Route exact path=\"/\">\n                    <LibraryPage booksByID={booksByID} loading={loading} error={error} />\n                  </Route>\n\n                  <Route exact path=\"/search\">\n                    <SearchPage booksByID={booksByID} loading={loading} error={error} />\n                  </Route>\n\n                  <Route path=\"*\">\n                    <Error404 />\n                  </Route>\n\n                </Switch>\n              </ThemeContext.Provider>\n            </LibraryContext.Provider>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nfunction Error404() {\n  return <PageInfo\n    illustration={\n      <SvgPageNotFound\n        primarycolor=\"var(--color-primary)\"\n        accentcolor=\"#444\"\n      />}\n    title=\"Page not found\"\n    text=\"The URL you typed is not valid.\"\n  />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport './index.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}